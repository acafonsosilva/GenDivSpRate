labels = c("Discard 20% distant","Keep"),
name = "Discarded by:") +
scale_shape_manual(values = c(15, 19),
labels = c("Discard outside resampled","Keep"),
name = "Discarded by:")
ggplot(gendiv_clean1, aes(y = EstTheta, x = subTheta_mean)) +
geom_point(aes(color = discard20, shape = discardOut), alpha = 0.5) +
geom_smooth(method= "lm") + scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_color_manual(values = c("red", "gray70"),
labels = c("Discard 20% distant","Keep"),
name = "Discarded by:") +
scale_shape_manual(values = c(15, 19),
labels = c("Discard outside resampled","Keep"),
name = "Discarded by:") +
labs(y = bquote("Estimated " ~ theta),
x = bquote("Mean of subsampled " ~ theta),
title = 'Theta outliers')
ggplot(gendiv_clean1, aes(y = EstTheta, x = subTheta_mean)) +
geom_point(aes(color = discard20, shape = discardOut), alpha = 0.5) +
geom_smooth(method= "lm") + #scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_color_manual(values = c("red", "gray70"),
labels = c("Discard 20% distant","Keep"),
name = "Discarded by:") +
scale_shape_manual(values = c(15, 19),
labels = c("Discard outside resampled","Keep"),
name = "Discarded by:")
head(gendiv_clean1)
qp1 <- ggplot(gendiv_clean1, aes(y = EstPi, x = subPi_mean)) +
geom_point(aes(fill = discard20), shape = 21) +
geom_smooth(method= "lm") + scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_fill_manual(values = c("red", "gray70"),
labels = c("Discard 20% distant","Keep"),
name = "Discarded by:") +
labs(y = bquote("Estimated " ~ pi),
x = bquote("Mean of subsampled " ~ pi),
title = 'Pi outliers - Discard 20% distant')
qp2 <- ggplot(gendiv_clean1, aes(y = EstPi, x = subPi_mean)) +
geom_point(aes(fill = discardOut), shape = 21) +
geom_smooth(method= "lm") + scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_fill_manual(values = c("red", "gray70"),
labels = c("Discard outside resampled","Keep"),
name = "Discarded by:") +
labs(y = bquote("Estimated " ~ pi),
x = bquote("Mean of subsampled " ~ pi),
title = 'Pi outliers - Discard outside resampled')
ggarrange(qp1,qp2, common.legend = TRUE, legend = 'right')
ggplot(gendiv_clean1, aes(y = EstPi, x = subPi_mean)) +
geom_point(aes(fill = discard20), shape = 21, alpha = 0.7) +
geom_smooth(method= "lm") + scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_fill_manual(values = c("red", "gray70"),
labels = NULL,
name = NULL) +
labs(y = bquote("Estimated " ~ pi),
x = bquote("Mean of subsampled " ~ pi),
title = 'Pi outliers - Discard 20% distant')
?scale_fill_manual
ggplot(gendiv_clean1, aes(y = EstPi, x = subPi_mean)) +
geom_point(aes(fill = discard20), shape = 21, alpha = 0.7) +
geom_smooth(method= "lm") + scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_fill_manual(values = c("red", "gray70")) +
labs(y = bquote("Estimated " ~ pi),
x = bquote("Mean of subsampled " ~ pi),
title = 'Pi outliers - Discard 20% distant')
ggplot(gendiv_clean1, aes(y = EstPi, x = subPi_mean)) +
geom_point(aes(fill = discard20), shape = 19, alpha = 0.7,show.legend = FALSE) +
geom_smooth(method= "lm") + scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_fill_manual(values = c("red", "gray70")) +
labs(y = bquote("Estimated " ~ pi),
x = bquote("Mean of subsampled " ~ pi),
title = 'Pi outliers - Discard 20% distant')
ggplot(gendiv_clean1, aes(y = EstPi, x = subPi_mean)) +
geom_point(aes(color = discard20), shape = 19, alpha = 0.7,show.legend = FALSE) +
geom_smooth(method= "lm") + scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_color_manual(values = c("red", "gray70")) +
labs(y = bquote("Estimated " ~ pi),
x = bquote("Mean of subsampled " ~ pi),
title = 'Pi outliers - Discard 20% distant')
qp1 <- ggplot(gendiv_clean1, aes(y = EstPi, x = subPi_mean)) +
geom_point(aes(color = discard20), shape = 19, alpha = 0.7,show.legend = FALSE) +
geom_smooth(method= "lm") + scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_color_manual(values = c("red", "gray70")) +
labs(y = bquote("Estimated " ~ pi),
x = bquote("Mean of subsampled " ~ pi),
title = 'Pi outliers - Discard 20% distant (both stats)')
qp2 <- ggplot(gendiv_clean1, aes(y = EstPi, x = subPi_mean)) +
geom_point(aes(color = discardOut), shape = 19, alpha = 0.7,show.legend = FALSE) +
geom_smooth(method= "lm") + scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_color_manual(values = c("red", "gray70")) +
labs(y = bquote("Estimated " ~ pi),
x = bquote("Mean of subsampled " ~ pi),
title = 'Pi outliers - Discard outside resampled (both stats)')
qt1 <- ggplot(gendiv_clean1, aes(y = EstTheta, x = subTheta_mean)) +
geom_point(aes(color = discard20), shape = 19, alpha = 0.7, show.legend = FALSE) +
geom_smooth(method= "lm") + scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_color_manual(values = c("red", "gray70")) +
labs(y = bquote("Estimated " ~ theta),
x = bquote("Mean of subsampled " ~ theta),
title = 'Theta outliers - Discard 20% distant (both stats)')
qt2 <- ggplot(gendiv_clean1, aes(y = EstTheta, x = subTheta_mean)) +
geom_point(aes(color = discardOut), shape = 19, alpha = 0.7, show.legend = FALSE) +
geom_smooth(method= "lm") + scale_x_log10() + scale_y_log10() +
theme_bw() +
scale_color_manual(values = c("red", "gray70")) +
labs(y = bquote("Estimated " ~ theta),
x = bquote("Mean of subsampled " ~ theta),
title = 'Theta outliers - Discard outside resampled (both stats)')
qpt <- ggarrange(qp1,qp2,qt1,qt2, ncol = 2)
qpt
qpt
qpt <- ggarrange(qp1,qp2,qt1,qt2, ncol = 2, nrow = 2)
?ggarrange
qpt
head(gendiv_clean1)
head(gendiv_notclean)
??iwanthue
library(hues)
dt <- gendiv_clean %>% dplyr::select(., species, Nind, EstPi,EstTheta) %>% pivot_longer(cols=pi_ferretti:theta_ferretti)
dt <- gendiv_clean %>% dplyr::select(., species, Nind, EstPi,EstTheta) %>% pivot_longer(cols=EstPi:EstTheta)
n2 <- ggplot(dt, aes(x = Nind)) + geom_point(aes(y = value, colour = name),  alpha = 0.4) +
scale_color_manual(values = c(iwanthue(2)[1], iwanthue(2)[2]),
labels = c(bquote("Estimated" ~ pi), bquote("Estimated" ~ theta)),
name = "Genetic diversity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(Nind))) +
geom_vline(aes(xintercept = median(Nind)), linetype = "longdash") +
theme_classic() + labs(y = "Genetic diversity", x = "Number of individuals") + theme(legend.position="bottom") + scale_y_continuous(trans = "log10", breaks=c(0.00, 0.001,0.005, 0.01,0.05, 0.10))
n2
n1 <- ggplot(gendiv_clean, aes(Nind))  + geom_histogram(aes(y=..density..), bins = 31, fill = "gray70", colour = "white") +
geom_density( fill = "white", alpha = 0.5) +
scale_x_log10() + geom_vline(aes(xintercept = mean(Nind))) + geom_vline(aes(xintercept = median(Nind)), linetype = "longdash") + theme_classic() + labs(y = "Count", x = "") + scale_y_continuous(breaks=c(0.000, 0.250, 0.500, 0.750, 1.000), labels= function(x) sprintf("%.3f", x))
n1
n1
ggplot(gendiv_clean, aes(Nind))  +
geom_histogram(aes(y=..density..), bins = 31, fill = "gray70", colour = "white") +
geom_density( fill = "white", alpha = 0.5) +
#scale_x_log10() +
geom_vline(aes(xintercept = mean(Nind))) +
geom_vline(aes(xintercept = median(Nind)), linetype = "longdash") +
theme_classic() +
labs(y = "Count", x = "") +
scale_y_continuous(breaks=c(0.000, 0.250, 0.500, 0.750, 1.000),
labels= function(x) sprintf("%.3f", x))
ggplot(gendiv_clean, aes(Nind))  +
geom_histogram(aes(y=..density..), bins = 31, fill = "gray70", colour = "white") +
geom_density( fill = "white", alpha = 0.5) +
scale_x_log10() +
geom_vline(aes(xintercept = mean(Nind))) +
geom_vline(aes(xintercept = median(Nind)), linetype = "longdash") +
theme_classic() +
labs(y = "Count", x = "Number of individuals") +
scale_y_continuous(breaks=c(0.000, 0.250, 0.500, 0.750, 1.000),
labels= function(x) sprintf("%.3f", x))
ggplot(gendiv_clean, aes(Nind))  +
geom_histogram(aes(y=..density..), bins = 31, fill = "gray70", colour = "white") +
geom_density( fill = "white", alpha = 0.5) +
scale_x_log10() +
geom_vline(aes(xintercept = mean(Nind))) +
geom_vline(aes(xintercept = median(Nind)), linetype = "longdash") +
theme_classic() +
labs(y = "Count", x = "Number of individuals") +
scale_y_continuous(breaks=c(0.000, 0.250, 0.500, 0.750, 1.000),
labels= function(x) sprintf("%.3f", x)) +
stat_bin(geom="text", size=3.5, aes(label=..count.., y=0.8*(..count..)))
ggplot(gendiv_clean, aes(Nind))  +
geom_histogram(aes(y=..density..), bins = 31, fill = "gray70", colour = "white") +
stat_bin(geom="text", size=3.5, aes(label=..count.., y=0.8*(..count..)))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(aes(y=..density..), bins = 31, fill = "gray70", colour = "grey30") +
stat_bin(geom="text", size=3.5, aes(label=..count.., y=0.8*(..count..)))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 31, fill = "gray70", colour = "grey30") +
stat_bin(geom="text", size=3.5, aes(label=..count.., y=0.8*(..count..)))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 31, fill = "gray70", colour = "white") +
stat_bin(geom="text", size=3.5, aes(label=..count.., y=0.8*(..count..))) +
geom_density( fill = "white", alpha = 0.5) +
scale_x_log10() +
geom_vline(aes(xintercept = mean(Nind))) +
geom_vline(aes(xintercept = median(Nind)), linetype = "longdash") +
theme_classic() +
labs(y = "Count", x = "Number of individuals") +
scale_y_continuous(breaks=c(0.000, 0.250, 0.500, 0.750, 1.000),
labels= function(x) sprintf("%.3f", x))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 10, fill = "gray70", colour = "white") +
stat_bin(geom="text", size=3.5, aes(label=..count.., y=0.8*(..count..))) +
geom_density( fill = "white", alpha = 0.5) +
scale_x_log10() +
geom_vline(aes(xintercept = mean(Nind))) +
geom_vline(aes(xintercept = median(Nind)), linetype = "longdash") +
theme_classic() +
labs(y = "Count", x = "Number of individuals")
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 10, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 10,size=3.5, aes(label=..count.., y=0.8*(..count..)))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30,size=3.5, aes(label=..count.., y=0.8*(..count..)))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30,size=3.5, aes(label=..count.., y=0.8*(..count..))) +
geom_density( fill = "white", alpha = 0.5) +
scale_x_log10() +
geom_vline(aes(xintercept = mean(Nind))) +
geom_vline(aes(xintercept = median(Nind)), linetype = "longdash") +
theme_classic() +
labs(y = "Count", x = "Number of individuals") +
scale_y_continuous(breaks=c(0.000, 0.250, 0.500, 0.750, 1.000),
labels= function(x) sprintf("%.3f", x))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log2() +
theme_classic() +
labs(y = "Count", x = "Number of individuals")
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log10() +
theme_classic() +
labs(y = "Count", x = "Number of individuals")
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log10() +
theme_classic() +
labs(y = "Count", x = "Number of individuals") + scale_x_continuous(breaks=c(5, 10, 15, 20,30,50,100,200,1000), labels= function(x) sprintf("%.3f", x))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log10() +
theme_classic() +
labs(y = "Count", x = "Number of individuals")
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log10() +
theme_classic() +
labs(y = "Count", x = "Number of individuals") + scale_x_continuous(breaks=c(5, 10, 15, 20,30,50,100,200,1000))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log10() +
theme_classic() +
labs(y = "Count", x = "Number of individuals") + scale_x_continuous( labels= c(5, 10, 15, 20,30,50,100,200,1000))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
#scale_x_log10() +
theme_classic() +
labs(y = "Count", x = "Number of individuals") + scale_x_continuous(breaks=c(5, 10, 15, 20,30,50,100,200,1000), labels= c(5, 10, 15, 20,30,50,100,200,1000))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,1000), labels= c(5, 10, 15, 20,30,50,100,200,1000)) +
theme_classic()
n2
head(gendiv_notClean)
head(gendiv_notclean)
n1 <- ggplot(gendiv_notclean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,500,1000), labels= c(5, 10, 15, 20,30,50,100,200,500,1000)) +
theme_classic() +
labs(y = "Count", x = "Number of individuals")
dtn <- gendiv_notclean %>% dplyr::select(., species, Nind, pi_ferretti,theta_ferretti) %>%
pivot_longer(cols=pi_ferretti:theta_ferretti)
n2 <- ggplot(dtn, aes(x = Nind)) + geom_point(aes(y = value, colour = name),  alpha = 0.4) +
scale_color_manual(values = c(iwanthue(2)[1], iwanthue(2)[2]),
labels = c(bquote("Estimated" ~ pi), bquote("Estimated" ~ theta)),
name = "Genetic diversity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(Nind))) +
geom_vline(aes(xintercept = median(Nind)), linetype = "longdash") +
theme_classic() + labs(y = "Genetic diversity", x = "Number of individuals") + theme(legend.position="bottom") + scale_y_continuous(trans = "log10", breaks=c(0.00, 0.001,0.005, 0.01,0.05, 0.10))
###clean
c1 <- ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,500,1000), labels= c(5, 10, 15, 20,30,50,100,200,500,1000)) +
theme_classic() +
labs(y = "Count", x = "Number of individuals")
dt <- gendiv_clean %>% dplyr::select(., species, Nind, EstPi,EstTheta) %>% pivot_longer(cols=EstPi:EstTheta)
c2 <- ggplot(dt, aes(x = Nind)) + geom_point(aes(y = value, colour = name),  alpha = 0.4) +
scale_color_manual(values = c(iwanthue(2)[1], iwanthue(2)[2]),
labels = c(bquote("Estimated" ~ pi), bquote("Estimated" ~ theta)),
name = "Genetic diversity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(Nind))) +
geom_vline(aes(xintercept = median(Nind)), linetype = "longdash") +
theme_classic() + labs(y = "Genetic diversity", x = "Number of individuals") + theme(legend.position="bottom") + scale_y_continuous(trans = "log10", breaks=c(0.00, 0.001,0.005, 0.01,0.05, 0.10))
ggarrange(n1,n2,c1,c2, ncol = 2, nrow = 2)
ggarrange(n1,c1,n2,c2, ncol = 2, nrow = 2)
head(dtn)
ggplot(dtn, aes(x = Nind)) + geom_point(aes(y = value, colour = name),  alpha = 0.4) +
geom_smooth(aes(y = value), method= "lm") +
scale_color_manual(values = c(iwanthue(2)[1], iwanthue(2)[2]),
labels = c(bquote("Estimated" ~ pi), bquote("Estimated" ~ theta)),
name = "Genetic diversity") +
scale_x_log10() + theme_classic() + theme(legend.position="bottom") +
labs(y = "Genetic diversity", x = "Number of individuals") +
scale_y_continuous(trans = "log10", breaks=c(0.00, 0.001,0.005, 0.01,0.05, 0.10))
ggplot(dtn, aes(x = Nind)) + geom_point(aes(y = value, colour = name),  alpha = 0.4) +
geom_smooth(aes(y = value), method= "lm") +
scale_color_manual(values = c(iwanthue(2)[1], iwanthue(2)[2]),
labels = c(bquote("Estimated" ~ pi), bquote("Estimated" ~ theta)),
name = "Genetic diversity") +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,500,1000), labels= c(5, 10, 15, 20,30,50,100,200,500,1000)) + theme_classic() + theme(legend.position="bottom") +
labs(y = "Genetic diversity", x = "Number of individuals") +
scale_y_continuous(trans = "log10", breaks=c(0.00, 0.001,0.005, 0.01,0.05, 0.10))
ggplot(dtn, aes(x = Nind)) + geom_point(aes(y = value, colour = name),  alpha = 0.4) +
geom_smooth(aes(y = value, colour = name), method= "lm") +
scale_color_manual(values = c(iwanthue(2)[1], iwanthue(2)[2]),
labels = c(bquote("Estimated" ~ pi), bquote("Estimated" ~ theta)),
name = "Genetic diversity") +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,500,1000), labels= c(5, 10, 15, 20,30,50,100,200,500,1000)) + theme_classic() + theme(legend.position="bottom") +
labs(y = "Genetic diversity", x = "Number of individuals") +
scale_y_continuous(trans = "log10", breaks=c(0.00, 0.001,0.005, 0.01,0.05, 0.10))
?ggarrange
ggarrange(n1,c1,n2,c2, ncol = 2, nrow = 2, title = 'problematic sequence species names')
ggplot(dt, aes(x = Nind)) + geom_point(aes(y = value, colour = name),  alpha = 0.4) +
geom_smooth(aes(y = value, colour = name), method= "lm") +
scale_color_manual(values = c(iwanthue(2)[1], iwanthue(2)[2]),
labels = c(bquote("Estimated" ~ pi), bquote("Estimated" ~ theta)),
name = "Genetic diversity") +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,500,1000), labels= c(5, 10, 15, 20,30,50,100,200,500,1000)) + theme_classic() + theme(legend.position="bottom") +
labs(y = "Genetic diversity", x = "Number of individuals") +
scale_y_continuous(trans = "log10", breaks=c(0.00, 0.001,0.005, 0.01,0.05, 0.10))
ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,500,1000), labels= c(5, 10, 15, 20,30,50,100,200,500,1000)) +
theme_classic() +
labs(y = "Count", x = "Number of individuals", title = 'Filtered dataset')
ggplot(dtn, aes(x = Nind)) + geom_point(aes(y = value, colour = name),  alpha = 0.4) +
geom_smooth(aes(y = value, colour = name), method= "lm") +
scale_color_manual(values = c(iwanthue(2)[1], iwanthue(2)[2]),
labels = c(bquote("Estimated" ~ pi), bquote("Estimated" ~ theta)),
name = "Genetic diversity") +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,500,1000), labels= c(5, 10, 15, 20,30,50,100,200,500,1000)) + theme_classic() + theme(legend.position="bottom") +
labs(y = "Genetic diversity", x = "Number of individuals") +
scale_y_continuous(trans = "log10", breaks=c(0.00, 0.001,0.005, 0.01,0.05, 0.10))
###not clean
n1 <- ggplot(gendiv_notclean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,500,1000), labels= c(5, 10, 15, 20,30,50,100,200,500,1000)) +
theme_classic() +
labs(y = "Count", x = "Number of individuals", title = 'Not filtered dataset')
dtn <- gendiv_notclean %>% dplyr::select(., species, Nind, pi_ferretti,theta_ferretti) %>%
pivot_longer(cols=pi_ferretti:theta_ferretti)
n2 <- ggplot(dtn, aes(x = Nind)) + geom_point(aes(y = value, colour = name),  alpha = 0.4) +
geom_smooth(aes(y = value, colour = name), method= "lm") +
scale_color_manual(values = c(iwanthue(2)[1], iwanthue(2)[2]),
labels = c(bquote("Estimated" ~ pi), bquote("Estimated" ~ theta)),
name = "Genetic diversity") +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,500,1000), labels= c(5, 10, 15, 20,30,50,100,200,500,1000)) + theme_classic() + theme(legend.position="bottom") +
labs(y = "Genetic diversity", x = "Number of individuals") +
scale_y_continuous(trans = "log10", breaks=c(0.00, 0.001,0.005, 0.01,0.05, 0.10))
###clean
c1 <- ggplot(gendiv_clean, aes(x = Nind))  +
geom_histogram(bins = 30, fill = "gray70", colour = "white") +
stat_bin(geom="text", bins = 30, size=3.5, aes(label=..count.., y = 0.8*(..count..))) +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,500,1000), labels= c(5, 10, 15, 20,30,50,100,200,500,1000)) +
theme_classic() +
labs(y = "Count", x = "Number of individuals", title = 'Filtered dataset')
dt <- gendiv_clean %>% dplyr::select(., species, Nind, EstPi,EstTheta) %>% pivot_longer(cols=EstPi:EstTheta)
c2 <- ggplot(dt, aes(x = Nind)) + geom_point(aes(y = value, colour = name),  alpha = 0.4) +
geom_smooth(aes(y = value, colour = name), method= "lm") +
scale_color_manual(values = c(iwanthue(2)[1], iwanthue(2)[2]),
labels = c(bquote("Estimated" ~ pi), bquote("Estimated" ~ theta)),
name = "Genetic diversity") +
scale_x_log10(breaks=c(5, 10, 15, 20,30,50,100,200,500,1000), labels= c(5, 10, 15, 20,30,50,100,200,500,1000)) + theme_classic() + theme(legend.position="bottom") +
labs(y = "Genetic diversity", x = "Number of individuals") +
scale_y_continuous(trans = "log10", breaks=c(0.00, 0.001,0.005, 0.01,0.05, 0.10))
ggarrange(n1,c1,n2,c2, ncol = 2, nrow = 2, title = 'Comparing removing problematic sequence species names')
head(gen.div_miraldo)
gen.div_miraldo1 <- arrange(gen.div_miraldo,species)
head(gen.div_miraldo1)
gen.div_miraldo1 <- arrange(gen.div_miraldo,species) %>% rename(EstPi = EstPi_ferretti, EstTheta = EstTheta_ferretti)
gen.div_miraldo1 <- arrange(gen.div_miraldo,species) %>% dplyr::rename(EstPi = EstPi_ferretti, EstTheta = EstTheta_ferretti)
head(gen.div_miraldo1)
gen.div_miraldo <- gen.div_miraldo1
write.table(gen.div_miraldo,'/Users/acas/Dropbox/Post-docs/Morlon_Lab/analyses/genetic_diversity/mammals/Miraldo_cytb/getGendiv/GenDiv_noCoord0319_updatedCalc.txt', col.names = TRUE, row.names = FALSE,quote = FALSE,)
head(gendiv_clean)
head(select(gendiv_clean,species:EstTheta))
?left_join
compGendiv <- left_join(gen.div_miraldo,select(gendiv_clean,species:EstTheta), by = 'species',
suffix = c(".mir",".SC"))
head(compGendiv)
compGendiv <- left_join(gen.div_miraldo,select(gendiv_clean,species:EstTheta), by = 'species',
suffix = c(".mir",".SC")) %>%
pivot_longer(cols = Nind.mir:EstTheta.SC, names_pattern = "(.*)_(.*)")
compGendiv <- left_join(gen.div_miraldo,select(gendiv_clean,species:EstTheta), by = 'species',
suffix = c(".mir",".SC"))
compGendiv %>%
pivot_longer(cols = Nind.mir:EstTheta.SC, names_pattern = "(.*)")
compGendiv %>%
pivot_longer(cols = Nind.mir:EstTheta.SC, names_pattern = "(*.)")
compGendiv %>%
pivot_longer(cols = Nind.mir:EstTheta.SC, names_pattern = ".")
compGendiv %>%
pivot_longer(cols = Nind.mir:EstTheta.SC, names_pattern = "(.*)")
compGendiv %>%
pivot_longer(cols = Nind.mir:EstTheta.SC, names_pattern = "(.*.)")
head(compGendiv )
compGendiv <- left_join(gen.div_miraldo,select(gendiv_clean,species:EstTheta), by = 'species',
suffix = c("_mir","_SC"))
compGendiv %>%
pivot_longer(cols = Nind.mir:EstTheta.SC, names_pattern = "(_*)")
compGendiv %>%
pivot_longer(cols = Nind.mir:EstTheta.SC, names_pattern = "(*_)")
compGendiv %>%
pivot_longer(cols = Nind.mir:EstTheta.SC, names_pattern = "(.*)_(.)")
head(compGendiv)
compGendiv %>%
pivot_longer(cols = Nind.mir:EstTheta.SC, names_pattern = "(.*)_(.*)")
compGendiv %>%
pivot_longer(cols = Nind_mir:EstTheta_SC, names_pattern = "(.*)_(.*)")
compGendiv %>%
pivot_longer(cols = Nind_mir:EstTheta_SC, names_pattern = "(.*)")
compGendiv %>%
pivot_longer(cols = Nind_mir:EstTheta_SC, names_pattern = "(.*)_(.*)")
compGendiv %>%
pivot_longer(cols = Nind_mir:EstTheta_SC, names_pattern = "(.*)_")
compGendiv %>%
pivot_longer(cols = Nind_mir:EstTheta_SC, names_pattern = "(.*)_", names_to = c('stat','set'))
compGendiv %>%
pivot_longer(cols = Nind_mir:EstTheta_SC, names_pattern = "(.*)_(.*)", names_to = c('stat','set'))
head(gen.div_miraldo)
compGendiv <- bind_rows(data.frame(gen.div_miraldo,set = 'mir'),
data.frame(select(gendiv_clean,species:EstTheta), set = 'SC'))
head(compGendiv)
compGendiv %>%
pivot_longer(cols = Nind:EstTheta, names_to = c('stat','set'))
compGendiv %>%
pivot_longer(cols = Nind:EstTheta)
compGendiv %>%
pivot_longer(cols = Nind_mir:EstTheta_SC,
names_pattern = "(.*)_(.*)", names_to = c('stat','set')) %>%
pivot_wider(names_from = set, values_from = value)
compGendiv %>%
pivot_longer(cols = Nind_mir:EstTheta_SC,
names_pattern = "(.*)_(.*)", names_to = c('stat','set'))
compGendiv <- left_join(gen.div_miraldo,select(gendiv_clean,species:EstTheta), by = 'species',
suffix = c("_mir","_SC"))
compGendiv %>%
pivot_longer(cols = Nind_mir:EstTheta_SC,
names_pattern = "(.*)_(.*)", names_to = c('stat','set')) %>%
pivot_wider(names_from = set, values_from = value)
ggplot(compGendiv,aes(x = mir, y = SC)) + geom_point() + geom_smooth(method= "lm") +
facet_grid(~stat) + labs(x = "Alignments from Miraldo et al. (2016)",
y = "Alignments from SuperCrunch") + theme_bw()
ggplot(compGendiv,aes(x = mir, y = SC)) + geom_point() + geom_smooth(method= "lm") +
facet_grid(~stat)
ggplot(compGendiv,aes(x = mir, y = SC)) + geom_point() + geom_smooth(method= "lm") +
facet_wrap(~stat)
head(compGendiv)
compGendiv <- left_join(gen.div_miraldo,select(gendiv_clean,species:EstTheta),
by = 'species',suffix = c("_mir","_SC")) %>%
pivot_longer(cols = Nind_mir:EstTheta_SC,
names_pattern = "(.*)_(.*)", names_to = c('stat','set')) %>%
pivot_wider(names_from = set, values_from = value)
head(compGendiv)
ggplot(compGendiv,aes(x = mir, y = SC, group = stat)) + geom_point()
ggplot(compGendiv,aes(x = mir, y = SC)) + geom_point() + #geom_smooth(method= "lm") +
facet_wrap(~stat)
str(compGendiv)
ggplot(compGendiv,aes(x = mir, y = SC)) + geom_point() + geom_smooth(method= "lm") +
facet_wrap(~stat, scales = 'free')
ggplot(compGendiv,aes(x = mir, y = SC)) + geom_point() + geom_smooth(method= "lm") +
facet_wrap(~stat, scales = 'free') + labs(x = "Alignments from Miraldo et al. (2016)",
y = "Alignments from SuperCrunch") + theme_bw() + scale_x_log10() + scale_y_log10()
ggplot(compGendiv,aes(x = mir, y = SC)) + geom_point() + geom_abline() +
facet_wrap(~stat, scales = 'free') + labs(x = "Alignments from Miraldo et al. (2016)",
y = "Alignments from SuperCrunch") + theme_bw() + scale_x_log10() + scale_y_log10()
length(unique(compGendiv$species))
q = ggplot(compGendiv,aes(x = mir, y = SC)) +
geom_point() + geom_abline() +
facet_wrap(~stat, scales = 'free') +
labs(x = "Alignments from Miraldo et al. (2016)",
y = "Alignments from SuperCrunch") +
theme_bw() + scale_x_log10() + scale_y_log10()
q
dim(gendiv_clean)
q
ggplot(compGendiv,aes(x = mir, y = SC)) +
geom_point() + geom_abline() +
facet_wrap(~stat, scales = 'free') +
labs(x = "Alignments from Miraldo et al. (2016)",
y = "Alignments from SuperCrunch") +
theme_bw()
unlink('~/Dropbox/Post-docs/Morlon_Lab/analyses/genetic_diversity/evaluating_superCrunch_clean_GenDiv_cache', recursive = TRUE)
Sys.getenv("R_IUCN")
Sys.unsetenv
Sys.getenv("R_ENVIRON_USER")
Sys.setenv()
?Sys.setenv()
Sys.unsetenv("R_IUCN")
sessionInfo()
gen.div_miraldo <- read.delim('/Users/acas/Dropbox/Post-docs/Morlon_Lab/analyses/genetic_diversity/mammals/Miraldo_cytb/getGendiv/GenDiv_noCoord0319_updatedCalc.txt')
