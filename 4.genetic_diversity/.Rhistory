## sub-sample 1000x to 5 for species that have more than 5 individuals
pi_resample1000 <- c()
theta_resample1000 <- c()
if(ind > 5){
# for(j in 1:1000){
#
#   setseqDNA <- cleanDNA(seqDNA[sample(ind, 5), ])
#   pi_resample1000 <- c(pi_resample1000, pi_resample = pi_estimator_fasta(setseqDNA))
#   theta_resample1000 <- c(theta_resample1000, theta_resample = theta_estimator_fasta(setseqDNA))
# }
# ReList[[sp]] <- list(pi_resample = pi_resample1000,
#                      theta_resample = theta_resample1000)
#
# sub <- tibble(pi = pi_resample1000,
#                   theta = theta_resample1000)
#
#   resData <- sub %>%
#   summarise(species = sp,
#             subPi_min = min(pi,na.rm = TRUE),
#             subPi_mean = mean(pi,na.rm = TRUE),
#             subPi_max = max(pi,na.rm = TRUE),
#             subPi_upper.CI = CI(pi, ci = 0.95)[1],
#             subPi_lower.CI = CI(pi, ci = 0.95)[3],
#             subPi_sd = sd(pi, na.rm = TRUE),
#             subPi_se = subPi_sd / sqrt(sum(!is.na(pi))),
#             subTheta_min = min(theta,na.rm = TRUE),
#             subTheta_mean = mean(theta,na.rm = TRUE),
#             subTheta_max = max(theta,na.rm = TRUE),
#             subTheta_upper.CI = CI(theta, ci = 0.95)[1],
#             subTheta_lower.CI = CI(theta, ci = 0.95)[3],
#             subTheta_sd = sd(theta, na.rm = TRUE),
#             subTheta_se  = subTheta_sd / sqrt(sum(!is.na(theta))))
### Check estimated genetic diversity is within range
gen.div0 <- left_join(gen.div0, resDataAll, by = 'species') %>%
#gen.div0 <- left_join(gen.div0, resData, by = 'species') %>%
mutate(outPi = case_when(EstPi > subPi_max | EstPi < subPi_min ~ 'out',
TRUE ~ 'in'),
outTheta = case_when(EstTheta > subTheta_max |
EstTheta < subTheta_min ~ 'out',
TRUE ~ 'in'))
# vlab <- pivot_longer(gen.div0[,c(4:10,13:17)], everything()) %>%
#   mutate(stat = case_when(str_detect(name,'Pi') ~ 'pi',
#                           str_detect(name,'Theta') ~ 'theta'),
#          cat = c("Estimated","Estimated", "range","mean",
#                  "range","CI","CI","range","mean","range","CI","CI"))
#
#sub_longer <- sub %>% pivot_longer(pi:theta)
# q <- ggplot(sub_longer) +
#   geom_density(aes(value, colour = name)) +
#   geom_vline(data = vlab,aes(xintercept = value,
#                              color = stat, linetype = cat)) +
#   scale_color_manual(values = c("red","blue")) + theme_bw() + ggtitle(sp)
#
# ggsave(paste0(wdpath, '/resampling/sp_resampledDistributions/',sp,'.png'),q, width = 8, height = 3)
}
gen.div <- bind_rows(gen.div,gen.div0)
}
print(paste0(i,"/",length(seq_list)))
}
dim(gen.div)
paste0(wdpath,"genetic_diversity/GenDiv_subsample5Ind.txt")
write.table(gen.div, paste0(wdpath,"genetic_diversity/GenDiv_subsample5Ind.txt"), sep = "\t", quote = FALSE, row.names = FALSE, col.names = TRUE)
datacompClades <- readRDS('/Users/acas/Dropbox/Post-docs/Morlon_Lab/manuscript_projects_info/mammals_genDiv_SpRate/manuscript_scripts_data/pgls/clade/datacomp_clade_gendivSpRate.rds')
names(datacompClades)
names(datacompClades[[1]])
repi <- 1
clade <- names(datacompClades)[1]
dim(datacompClades[[clade]][[repi]]$data)
names(datacompClades[[1]])[[repi]]
pgls <- list()
pgls <- list()
for (clade in names(datacompClades)[1]){
tryCatch({
#estimated pi vs speciation rate at the tips
modpglsEstPi <- NULL
modpglsEstPi <- pgls(log(EstPi) ~ log(tipRate), data = datacompClades[[clade]][[repi]], lambda = 'ML')
#mean subsampled pi vs speciation rate at the tips
modpglssubPi <- NULL
modpglssubPi <- pgls(log(subPi_mean) ~ log(tipRate), data = datacompClades[[clade]][[repi]], lambda = 'ML')
#estimated theta vs speciation rate at the tips
modpglsEstTheta <- NULL
modpglsEstTheta <- pgls(log(EstTheta) ~ log(tipRate), data = datacompClades[[clade]][[repi]], lambda = 'ML')
#mean subsampled theta vs speciation rate at the tips
modpglssubtheta <- NULL
modpglssubtheta <- pgls(log(subTheta_mean) ~ log(tipRate), data = datacompClades[[clade]][[repi]], lambda = 'ML')
pgls[[clade]] <- list(EstPi = modpglsEstPi, subPi = modpglssubPi,
EstTheta = modpglsEstTheta, subtheta = modpglssubtheta)
print(j)
}, error=function(e){cat("Error in",conditionMessage(e), "\n")})
}
names(pgls)
names(pgls[['Carnivora']])
names(datacompClades[[1]])[[repi]]
names(datacompClades[[1]])[repi]
dim(mGendivSpRate)
head(mGendivSpRate)
colnames(gen.div)
mGendivSpRate <- spRate %>%
filter(!set %in% 'treeMCC') %>%
group_by(species) %>%
dplyr::summarise(rate_mean = mean(tipRate, na.rm = TRUE),
rate_sd = sd(tipRate, na.rm = TRUE),
rate_se = rate_sd / sqrt(n()),
rate_lower.ci = CI(tipRate, ci = 0.95)[1],
rate_upper.ci = CI(tipRate, ci = 0.95)[3],
clades = unique(clades)) %>%
arrange(clades) %>%
mutate(ord = seq(1,length(n)),
species = forcats::fct_reorder(species, ord),
clades = forcats::fct_relevel(case_when(!clades %in% unique(PGLSclade$clade) ~ "Other",
TRUE ~ clades),"Other", after = 14)) %>%
inner_join(.,select(gen.div, species, EstPi,EstTheta,Nind), by = 'species')
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
geom_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean), method=lm, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple4") +
geom_smooth(data = mGendivSpRate, aes(y = EstPi, x = rate_mean), method=lm, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple3") +
geom_smooth(data = mGendivSpRate, aes(y = EstPi, x = rate_mean), method=lm, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple2") +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw()
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
geom_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple4") +
geom_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple3") +
geom_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple2") +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw()
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
geom_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple4") +
geom_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple3") +
geom_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple2") +
geom_smooth(data = filter(mGendivSpRate, Nind > 69), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple2") +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw() + theme(plot.margin = unit(c(0,0,0,0), "cm"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(y = expression(pi), x = NULL, colour = 'Clades')
dim(filter(mGendivSpRate, Nind > 9))
dim(filter(mGendivSpRate, Nind > 19))
dim(filter(mGendivSpRate, Nind > 49))
dim(filter(mGendivSpRate, Nind > 69))
dim(filter(mGendivSpRate, Nind > 99))
mGendivSpRate <- mutate(binInd = case_when(Nind > 9  ~ "min. 10",
Nind > 19 ~ "min. 20",
Nind > 49 ~ "min. 50",
Nind > 99 ~ "min. 100",
TRUE ~ NA))
mGendivSpRate <- mGendivSpRate %>%
mutate(binInd = case_when(Nind > 9  ~ "min. 10",
Nind > 19 ~ "min. 20",
Nind > 49 ~ "min. 50",
Nind > 99 ~ "min. 100",
TRUE ~ NA))
mGendivSpRate <- mGendivSpRate %>%
dplyr::mutate(binInd = case_when(Nind > 9  ~ "min. 10",
Nind > 19 ~ "min. 20",
Nind > 49 ~ "min. 50",
Nind > 99 ~ "min. 100",
TRUE ~ NA))
colnames(mGendivSpRate)
str(mGendivSpRate)
case_when(mGendivSpRate, Nind > 9  ~ "min. 10",
Nind > 19 ~ "min. 20",
Nind > 49 ~ "min. 50",
Nind > 99 ~ "min. 100",
TRUE ~ NA)
mGendivSpRate <- mGendivSpRate %>%
mutate(binInd = case_when(Nind > 9  ~ "min.10"))
head(mGendivSpRate)
head(mGendivSpRate)
mGendivSpRate <- mGendivSpRate %>%
mutate(binInd = case_when(Nind > 9  ~ "min.10",
Nind > 19 ~ "min. 20"))
mGendivSpRate <- mGendivSpRate %>%
mutate(binInd = case_when(Nind > 9  ~ "min.10",
Nind > 19 ~ "min. 20",
Nind > 49 ~ "min. 50",
Nind > 99 ~ "min. 100",
TRUE ~ "NA"))
head(mGendivSpRate)
mGendivSpRate <- mGendivSpRate %>%
mutate(binInd = case_when(Nind > 9  ~ "min. 10",
Nind > 19 ~ "min. 20",
Nind > 49 ~ "min. 50",
Nind > 99 ~ "min. 100"))
mGendivSpRate[mGendivSpRate$Nind < 5,]
mGendivSpRate[mGendivSpRate$Nind < 10,]
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
geom_smooth(aes(color = binInd),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5)
table(mGendivSpRate$binInd)
mGendivSpRate <- mGendivSpRate %>%
mutate(binInd = case_when(Nind > 99 ~ "min. 100",
Nind > 49 ~ "min. 50",
Nind > 19 ~ "min. 20",
Nind > 9  ~ "min. 10"))
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
geom_smooth(aes(color = binInd),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5)
str(mGendivSpRate)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
geom_smooth(aes(color = as.factor(binInd)),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
geom_smooth(aes(fill = as.factor(binInd)),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
stat_smooth(aes(color = as.factor(binInd)),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
stat_smooth(aes(color = as.factor(binInd)), geom='line',
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
stat_smooth(aes(color = as.factor(binInd), group = as.factor(binInd)), geom='line',
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
stat_smooth(aes(fill = as.factor(binInd), group = as.factor(binInd)), geom='line',
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
stat_smooth(aes(fill = as.factor(binInd), color = as.factor(binInd), group = as.factor(binInd)), geom='line',
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5)
table(mGendivSpRate$binInd)
dim(filter(mGendivSpRate, Nind > 99))
dim(filter(mGendivSpRate, Nind > 49))
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.4) +
geom_point(size = 0.5, alpha = 0.4) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5) +
geom_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple4") +
geom_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple3") +
geom_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple2") +
geom_smooth(data = filter(mGendivSpRate, Nind > 99), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple1") +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw()
?geom_smooth
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.1) +
geom_point(size = 0.5, alpha = 0.1) +
scale_colour_manual(values = tcol) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5, color = 'black', se = FALSE) +
geom_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple4", fullrange = TRUE) +
geom_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "navy", fullrange = TRUE) +
geom_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "olivedrab", fullrange = TRUE) +
geom_smooth(data = filter(mGendivSpRate, Nind > 99), aes(y = EstPi, x = rate_mean),
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "orange2", fullrange = TRUE) +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw()
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.1) +
geom_point(size = 0.5, alpha = 0.1) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5, color = 'black', se = FALSE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "mediumpurple4", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "navy", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "olivedrab", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 99), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", alpha = 0.3, size=0.5, color = "orange2", fullrange = TRUE) +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw() + theme(plot.margin = unit(c(0,0,0,0), "cm"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(y = expression(pi), x = NULL)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.1) +
geom_point(size = 0.5, alpha = 0.1) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5, color = 'black', se = FALSE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "mediumpurple4", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", size=0.5, color = "navy", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", size=0.5, color = "olivedrab", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 99), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", size=0.5, color = "orange2", fullrange = TRUE) +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw() + theme(plot.margin = unit(c(0,0,0,0), "cm"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(y = expression(pi), x = NULL)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.1) +
geom_point(size = 0.5, alpha = 0.1) +
scale_y_continuous(trans='log10') +
scale_x_continuous(trans='log10') +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5, color = 'black', se = FALSE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "mediumpurple4", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", size=0.5, color = "navy", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", size=0.5, color = "olivedrab", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 99), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", size=0.5, color = "orange2", fullrange = TRUE) +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw()
min(mGendivSpRate$rate_mean)
max(mGendivSpRate$rate_mean)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.1) +
geom_point(size = 0.5, alpha = 0.1) +
scale_y_continuous(trans='log10',expand=c(0,0)) +
scale_x_continuous(trans='log10',expand=c(0,0)) +
geom_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5, color = 'black', se = FALSE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "mediumpurple4", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", size=0.5, color = "navy", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", size=0.5, color = "olivedrab", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 99), aes(y = EstPi, x = rate_mean), geom = 'line',
method=lm, se = FALSE, position = "identity", size=0.5, color = "orange2", fullrange = TRUE) +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw() + theme(plot.margin = unit(c(0,0,0,0), "cm"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(y = expression(pi), x = NULL)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.1) +
geom_point(size = 0.5, alpha = 0.1) +
scale_y_continuous(trans='log10',expand=c(0,0)) +
scale_x_continuous(trans='log10',expand=c(0,0)) +
stat_smooth(method=lm, position = "identity", alpha = 0.3, size=0.5, color = 'black', se = FALSE, geom = 'line') +
stat_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "mediumpurple4", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "navy", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "olivedrab", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 99), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "orange2", fullrange = TRUE) +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw() + theme(plot.margin = unit(c(0,0,0,0), "cm"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(y = expression(pi), x = NULL)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.1) +
geom_point(size = 0.5, alpha = 0.1) +
scale_y_continuous(trans='log10',expand=c(0,0)) +
scale_x_continuous(trans='log10',expand=c(0,0)) +
stat_smooth(method=lm, position = "identity", size=0.5, color = 'black', se = FALSE, geom = 'line') +
stat_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "mediumpurple4", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "navy", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "olivedrab", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 99), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "orange2", fullrange = TRUE) +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw() + theme(plot.margin = unit(c(0,0,0,0), "cm"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(y = expression(pi), x = NULL)
ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.1) +
geom_point(size = 0.5, alpha = 0.1) +
scale_y_continuous(trans='log10',expand=c(0,0)) +
scale_x_continuous(trans='log10',expand=c(0,0)) +
stat_smooth(method=lm, position = "identity", size=0.5, color = 'black', se = FALSE, geom = 'line') +
stat_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "purple", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "lightskyblue", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "olivedrab", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 99), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "orange2", fullrange = TRUE) +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw() + theme(plot.margin = unit(c(0,0,0,0), "cm"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(y = expression(pi), x = NULL)
q3 <- ggplot(data = mGendivSpRate, aes(y = EstPi, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.1) +
geom_point(size = 0.5, alpha = 0.1) +
scale_y_continuous(trans='log10',expand=c(0,0)) +
scale_x_continuous(trans='log10',expand=c(0,0)) +
stat_smooth(method=lm, position = "identity", size=0.5, color = 'black', se = FALSE, geom = 'line') +
stat_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "purple", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "lightskyblue", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "olivedrab", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 99), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "orange2", fullrange = TRUE) +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw() + theme(plot.margin = unit(c(0,0,0,0), "cm"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(y = expression(pi), x = NULL)
#q3
# ggsave('/Users/acas/Dropbox/Post-docs/Morlon_Lab/manuscript_projects_info/mammals_genDiv_SpRate/figures/PiVsRate.pdf', q3, width = 10, height = 8, useDingbats = FALSE )
q3.5 <- ggplot(data = mGendivSpRate, aes(y = EstTheta, x = rate_mean)) +
geom_errorbarh(aes(xmin = rate_lower.ci, xmax = rate_upper.ci), alpha = 0.1) +
geom_point(size = 0.5, alpha = 0.1) +
scale_y_continuous(trans='log10',expand=c(0,0)) +
scale_x_continuous(trans='log10',expand=c(0,0)) +
stat_smooth(method=lm, position = "identity", size=0.5, color = 'black', se = FALSE, geom = 'line') +
stat_smooth(data = filter(mGendivSpRate, Nind > 9), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "purple", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 19), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "lightskyblue", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 49), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "olivedrab", fullrange = TRUE) +
stat_smooth(data = filter(mGendivSpRate, Nind > 99), aes(y = EstPi, x = rate_mean), geom = 'line', linetype = 'dashed',
method=lm, se = FALSE, position = "identity", size=0.5, color = "orange2", fullrange = TRUE) +
#ggtitle('Pi vs mean rates with CI from 100 posterior trees') +
theme_bw() + theme(plot.margin = unit(c(0,0,0,0), "cm")) +
labs(y = expression(theta), x = bquote('Speciation rate '~(Myr^-1)), colour = 'Clades')
#q3.5
q33.5 <- ggarrange(q3, q3.5,
ncol = 1, nrow = 2,  align = "hv",
#widths = c(2.5, 1), heights = c(1, 2.5, 2.5),
common.legend = T , legend = "right")
q33.5
q33.5
